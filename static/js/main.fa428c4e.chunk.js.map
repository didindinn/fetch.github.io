{"version":3,"sources":["components/Image.js","components/GalleryContext.js","components/Gallery.js","components/Forms.js","layout/Footer.js","layout/Header.js","layout/Search.js","App.js","serviceWorker.js","index.js"],"names":["Image","props","className","src","Large","alt","Author","Downloads","href","onClick","window","open","GalleryContext","createContext","GalleryProvider","useState","encodeURIComponent","values","setValues","Provider","value","children","axios","require","Gallery","hits","data","setData","useContext","isLoading","setIsLoading","isError","setIsError","URL","uri","useEffect","a","result","fetchData","slice","quantity","map","img","largeImageURL","user","downloads","API_KEY","process","Forms","handleChange","e","target","name","type","checked","onSubmit","preventDefault","scroll","query","imageType","colors","placeholder","onChange","pattern","min","max","onKeyDown","test","key","func","Footer","Header","class","Search","id","config","scrollToRef","ref","scrollTo","top","current","offsetTop","left","behavior","App","myRef","useRef","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa428c4e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Image(props) {\r\n    return (\r\n        <div className=\"col-6 col-sm-3 p-3 text-center\">\r\n            <div className=\"card\">\r\n                <img className=\"m-3 img-fluid align-self-center PixImage\" src={props.Large} alt=\"\" /> \r\n                    <div className=\"card-footer\">\r\n                        <small>Author: <strong>{props.Author}</strong></small>\r\n                            <p className=\"fa-sm\">Downloads: {props.Downloads} </p>\r\n                        <button className=\"btn btn-success align-self-end m-2\" href={props.Large} onClick={() =>window.open(props.Large,'_blank')}><i className=\"fas fa-file-download\" /></button>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, createContext} from 'react'\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const GalleryContext = createContext();\r\n\r\n\r\nexport const GalleryProvider = props => {\r\n    const [values, setValues] = useState(\r\n        {\"query\": \"girl\",\r\n        \"quantity\": 12,\r\n        \"imageType\": \"photo\",\r\n        \"colors\": null,\r\n        \"uri\": \"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\"+encodeURIComponent(\"query\")\r\n      });\r\n\r\n\r\n\r\n            \r\n      \r\n\r\n      return(\r\n        <GalleryContext.Provider value={[values, setValues]}>\r\n        {props.children}\r\n    </GalleryContext.Provider>\r\n      );\r\n\r\n}","import React, {useState,useEffect,useContext} from 'react'\r\n\r\nimport \"./PixImage.css\"\r\nimport Image from \"./Image\"\r\nimport { GalleryContext } from './GalleryContext';\r\nconst axios = require('axios');\r\n\r\nexport default function Gallery(props) {\r\n    //Api data\r\n    const [data, setData] = useState({ hits: [] });\r\n    //Context values\r\n    const [values] = useContext(GalleryContext);\r\n     // Loading / error states\r\n     const [isLoading, setIsLoading] = useState(false);\r\n     const [isError, setIsError] = useState(false);\r\n    \r\n\r\n    \r\n    const URL = values.uri;\r\n    //const URL = \"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\"+encodeURIComponent(props.query)+\"&image_type\"+props.quantity+\"editors_choice=true&colors=\"+props.colors;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsError(false);\r\n            setIsLoading(true);\r\n            try {\r\n          const result = await axios(\r\n            URL,\r\n          );\r\n          setData(result.data);\r\n        }catch(error){\r\n            setIsError(true);\r\n        }\r\n          setIsLoading(false);\r\n        };\r\n        fetchData();\r\n      }, [URL]);\r\n     \r\n     //console.log(data.hits)\r\n    return (\r\n        <div className=\"row\">\r\n            \r\n            {isError && <div>Something went wrong ...</div>}\r\n            {isLoading ? (<div>Loading ...</div>) : ( <>\r\n      {data.hits.slice(0,values.quantity).map(img => (\r\n        \r\n       <Image Large={img.largeImageURL} Author={img.user} Downloads={img.downloads}/>\r\n       \r\n      ))}\r\n      </>\r\n    )}  \r\n    \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { GalleryContext } from './GalleryContext';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport default function Forms(props) {\r\n\r\nconst [values, setValues] = useContext(GalleryContext);\r\n\r\n\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n   props.scroll();\r\n   const func = () => setValues({...values, uri: \"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\"+encodeURIComponent(values.query)+\"&image_type=\"+values.imageType+\"&colors=\"+values.colors});\r\n   func();\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n  \r\n\r\nfunction handleChange(e) {\r\n  const {name,value,type,checked} = e.target\r\n   if(type === \"checkbox\"){\r\n    setValues({\r\n      ...values,\r\n       [name]: checked} )\r\n   }else{setValues( {...values, [name]: value  })}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nreturn (\r\n        \r\n        <div>\r\n       \r\n        <form onSubmit={handleSubmit}>\r\n         <input name=\"query\" value={props.query} type=\"text\" placeholder=\"search...\" onChange={handleChange} /> <br/><br/> \r\n            \r\n           \r\n                        <input\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    pattern=\"[0-9]*\"\r\n                    placeholder=\"results\"\r\n                    min=\"1\" max=\"20\"\r\n                    onKeyDown={e => /[+-.,]$/.test(e.key) && e.preventDefault()} onChange={handleChange} /> <br/><br/>\r\n\r\n            <label>Color:  <select name=\"colors\" value={values.colors} onChange={handleChange}>\r\n            <option value=\"\">All</option>\r\n            <option value=\"red\">Red</option>\r\n            <option value=\"green\">Green</option>\r\n            <option value=\"blue\">Blue</option>\r\n          </select> </label> <br />\r\n\r\n          <br /> <label> <input name=\"imageType\" value=\"photo\" type=\"radio\" checked={values.imageType === \"photo\" } onChange={handleChange} /> Photo </label>\r\n          <br /> <label> <input name=\"imageType\" value=\"illustration\" type=\"radio\" checked={values.imageType === \"illustration\" } onChange={handleChange} /> Illustration </label>\r\n          <br /> <label> <input name=\"imageType\" value=\"vector\" type=\"radio\" checked={values.imageType === \"vector\" } onChange={handleChange} /> Vector </label>\r\n          <br />\r\n            <button className=\"btn btn-primary\" type=\"submit\" onClick={values.func}>Search</button>\r\n          </form>\r\n         \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col text-center text-white mb-2\">\r\n          <hr />\r\n          <footer>\r\n          <small className=\"text-primary\"> &copy; Spectral Apps </small>\r\n          </footer>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"row\"> \r\n          <div className=\"col bg-dark text-center text-white\">\r\n            <div class=\"jumbotron bg-dark\">\r\n              <h1 class=\"display-4\">Welcome</h1>\r\n              <p class=\"lead\">to Spectral apps fetch project</p>\r\n            \r\n              <p>Description:</p>\r\n\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Search(props) {\r\n    return (\r\n        <div className=\"row mt-2\">\r\n        <div id=\"search\" className=\"col bg-dark text-center text-white\">\r\n        {props.children}\r\n        <hr />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from 'react';\r\nimport Gallery from './components/Gallery';\r\nimport Forms from './components/Forms';\r\nimport Footer from './layout/Footer'\r\nimport Header from './layout/Header'\r\nimport Search from './layout/Search';\r\nimport { GalleryProvider } from './components/GalleryContext';\r\n\r\n\r\nrequire('dotenv').config()\r\n\r\nconst scrollToRef = (ref) => window.scrollTo({\r\n  top:ref.current.offsetTop, \r\n  left: 0,\r\n  behavior: 'smooth'})\r\nfunction App(props) {\r\n  const myRef = useRef(null)\r\n  const executeScroll = () => scrollToRef(myRef)\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"App container-fluid bg-dark\">\r\n        <Header />\r\n        <GalleryProvider>\r\n        <Search>\r\n          <Forms scroll={executeScroll}   />\r\n        </Search>\r\n          \r\n          <div className=\"row\">\r\n            <div ref={myRef} id=\"gallery\" className=\"col bg-dark\">\r\n             \r\n              <Gallery />\r\n             \r\n            </div>\r\n          </div>\r\n          </GalleryProvider>\r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}